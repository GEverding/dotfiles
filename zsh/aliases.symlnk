
alias vi='vim'
alias tmux="tmux -2"
alias nrepl="lein nrepl :middleware \"['cider.nrepl/cider-middleware 'refactor-nrepl.middleware/wrap-refactor]\""

alias so="source"
alias soz="source $HOME/.zshrc"
alias kat='pygmentize -O style=monokai -f console256 -g'

alias ll="ls -alhF"
alias l="ls -ACF"
alias la="ls -CF"
alias lr='ls -R | grep ":$" | sed -e '\''s/:$//'\'' -e '\''s/[^-][^\/]*\//--/g'\'' -e '\''s/^/   /'\'' -e '\''s/-/|/'\'''

alias c='clear'

alias qfind="find . -name "

alias wget='wget --content-disposition'

alias servethis="python -c 'import SimpleHTTPServer; SimpleHTTPServer.test()'"

alias search="l | grep -i "

mans ()
{
  man $1 | grep -iC2 --color=always $2 | less
}


function wikipedia() {
  if [ "${1}" ]; then dig + short +TXT "${1}".wp.dg.cx; fi
}

alias myip='curl ip.appspot.com'

alias upgrade='apt-get update && apt-get upgrade && apt-get clean'

csscount() {
    cnt=0
    depth=0
    while read -n 1 char; do
            case $char in
                    "{")
                            ((depth++))
                            ;;
                    "}")
                            ((depth--))
                            if [ "$depth" -eq "0" ]; then
                                    ((cnt++))
                            fi
                            ;;
                    ",")
                            ((cnt++))
                            ;;
            esac
    done

    echo $cnt
}

# go back x directories
b() {
  str=""
  count=0
  while [ "$count" -lt "$1" ];
  do
    str=$str"../"
    let count=count+1
  done
  cd $str
}

# Create a file of xMbs
cf() {
  upload_file="upload_file.txt"
  mbs=1048576
  
  if [ -n "$2" ]; then
    upload_file="$2"
  fi  

  let size=`expr $mbs*$1`;
  dd if=/dev/zero of="$upload_file" bs=$size count=1
}


extract () {
    if [ -f $1 ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}


alias fact="elinks -dump randomfunfacts.com | sed -n '/^| /p' | tr -d \|"

alias freq='cut -f1 -d" " ~/.bash_history | sort | uniq -c | sort -nr | head -n 30'

ft()
{
  find . -name "$2" -exec grep -il "$1" {} \;
}

alias mcc="rm -rf var/cache/* var/full_page_cache/*"

alias wotgobblemem='ps -o time,ppid,pid,nice,pcpu,pmem,user,comm -A | sort -n -k 6 | tail -15'

function gi() 
{ 
  echo $1
  curl http://www.gitignore.io/api/$1 ;
}

alias hgl="hoogle --color --count=20 "

alias kube="kubectl"
alias cpualloc="util | grep % | awk '{print \$1}' | awk '{ sum += \$1 } END { if (NR > 0) { result=(sum**4000); printf result/NR \"%\n\" } }'"

function smartresize() {
   mogrify -path $3 -filter Triangle -define filter:support=2 -thumbnail $2 -unsharp 0.25x0.08+8.3+0.045 -dither None -posterize 136 -quality 82 -define jpeg:fancy-upsampling=off -define png:compression-filter=5 -define png:compression-level=9 -define png:compression-strategy=1 -define png:exclude-chunk=all -interlace none -colorspace sRGB $1
}
